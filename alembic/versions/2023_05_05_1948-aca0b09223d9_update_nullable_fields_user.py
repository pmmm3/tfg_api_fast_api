"""Update nullable fields user

Revision ID: aca0b09223d9
Revises: 56fefba68316
Create Date: 2023-05-05 19:48:12.673674

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "aca0b09223d9"
down_revision = "56fefba68316"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column("user", "name", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column("user", "disabled", existing_type=sa.BOOLEAN(), nullable=True)
    op.alter_column(
        "user", "created_at", existing_type=postgresql.TIMESTAMP(), nullable=True
    )
    op.alter_column(
        "user", "updated_at", existing_type=postgresql.TIMESTAMP(), nullable=True
    )
    op.alter_column("user", "role", existing_type=sa.VARCHAR(), nullable=True)
    op.drop_index("ix_user_email", table_name="user")
    op.create_index(op.f("ix_user_email"), "user", ["email"], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_user_email"), table_name="user")
    op.create_index("ix_user_email", "user", ["email"], unique=False)
    op.alter_column("user", "role", existing_type=sa.VARCHAR(), nullable=False)
    op.alter_column(
        "user", "updated_at", existing_type=postgresql.TIMESTAMP(), nullable=False
    )
    op.alter_column(
        "user", "created_at", existing_type=postgresql.TIMESTAMP(), nullable=False
    )
    op.alter_column("user", "disabled", existing_type=sa.BOOLEAN(), nullable=False)
    op.alter_column("user", "name", existing_type=sa.VARCHAR(), nullable=False)
    # ### end Alembic commands ###
