"""Add

Revision ID: b677e8d92013
Revises:
Create Date: 2023-07-05 00:37:07.549756

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision = "b677e8d92013"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "module",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "output",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("text", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("condition_type", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("condition_value", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "questionnaire",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("status", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user",
        sa.Column("email", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("last_name", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("disabled", sa.Boolean(), nullable=False),
        sa.Column(
            "hashed_password", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("token", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.PrimaryKeyConstraint("email"),
    )
    op.create_table(
        "admin",
        sa.Column("id_user", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id_user"],
            ["user.email"],
        ),
        sa.PrimaryKeyConstraint("id_user"),
    )
    op.create_table(
        "doctor",
        sa.Column("id_user", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id_user"],
            ["user.email"],
        ),
        sa.PrimaryKeyConstraint("id_user"),
    )
    op.create_table(
        "module_output_link",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("id_module", sa.Integer(), nullable=True),
        sa.Column("id_output", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["id_module"],
            ["module.id"],
        ),
        sa.ForeignKeyConstraint(
            ["id_output"],
            ["output.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "patient",
        sa.Column("id_user", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("consent", sa.Boolean(), nullable=True),
        sa.Column("telephone_number", sa.Integer(), nullable=True),
        sa.Column("gender", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("civil_status", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column(
            "employment_status", sqlmodel.sql.sqltypes.AutoString(), nullable=True
        ),
        sa.Column("education_level", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("region", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("zone", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("native_language", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("nationality", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("birth_date", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["id_user"],
            ["user.email"],
        ),
        sa.PrimaryKeyConstraint("id_user"),
    )
    op.create_table(
        "question",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("id_module", sa.Integer(), nullable=False),
        sa.Column("content", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.ForeignKeyConstraint(
            ["id", "id_module"],
            ["question.id", "question.id_module"],
        ),
        sa.ForeignKeyConstraint(
            ["id_module"],
            ["module.id"],
        ),
        sa.PrimaryKeyConstraint("id", "id_module"),
    )
    op.create_table(
        "questionnaire_module_link",
        sa.Column("id_questionnaire", sa.Integer(), nullable=False),
        sa.Column("id_module", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id_module"],
            ["module.id"],
        ),
        sa.ForeignKeyConstraint(
            ["id_questionnaire"],
            ["questionnaire.id"],
        ),
        sa.PrimaryKeyConstraint("id_questionnaire", "id_module"),
    )
    op.create_table(
        "assignment",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("id_doctor", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("id_patient", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("id_questionnaire", sa.Integer(), nullable=True),
        sa.Column("date", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id_doctor"],
            ["doctor.id_user"],
        ),
        sa.ForeignKeyConstraint(
            ["id_patient"],
            ["patient.id_user"],
        ),
        sa.ForeignKeyConstraint(
            ["id_questionnaire"],
            ["questionnaire.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "option_answer",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("id_question_question_id", sa.Integer(), nullable=True),
        sa.Column("id_question_module_id", sa.Integer(), nullable=True),
        sa.Column("content", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("score", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["id_question_question_id", "id_question_module_id"],
            ["question.id", "question.id_module"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "question_output_link",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("id_question_question_id", sa.Integer(), nullable=True),
        sa.Column("id_question_module_id", sa.Integer(), nullable=True),
        sa.Column("id_output", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["id_output"],
            ["output.id"],
        ),
        sa.ForeignKeyConstraint(
            ["id_question_question_id", "id_question_module_id"],
            ["question.id", "question.id_module"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "answer",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("id_assignment", sa.Integer(), nullable=True),
        sa.Column("id_question_question_id", sa.Integer(), nullable=True),
        sa.Column("id_question_module_id", sa.Integer(), nullable=True),
        sa.Column("id_option", sa.Integer(), nullable=True),
        sa.Column("open_answer", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("date", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id_assignment"],
            ["assignment.id"],
        ),
        sa.ForeignKeyConstraint(
            ["id_option"],
            ["option_answer.id"],
        ),
        sa.ForeignKeyConstraint(
            ["id_question_question_id", "id_question_module_id"],
            ["question.id", "question.id_module"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("answer")
    op.drop_table("question_output_link")
    op.drop_table("option_answer")
    op.drop_table("assignment")
    op.drop_table("questionnaire_module_link")
    op.drop_table("question")
    op.drop_table("patient")
    op.drop_table("module_output_link")
    op.drop_table("doctor")
    op.drop_table("admin")
    op.drop_table("user")
    op.drop_table("questionnaire")
    op.drop_table("output")
    op.drop_table("module")
    # ### end Alembic commands ###
