"""Remove dependency cuestions

Revision ID: a0d62da6f5de
Revises: 9fd032eff6d8
Create Date: 2023-05-18 17:47:32.162584

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "a0d62da6f5de"
down_revision = "9fd032eff6d8"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("questiondependency")
    op.drop_column("question", "dependent_question_id")
    op.drop_column("question", "dependent_response")
    op.alter_column(
        "questionnaire",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        nullable=False,
    )
    op.alter_column(
        "questionnaire", "status", existing_type=sa.VARCHAR(), nullable=False
    )
    op.alter_column("user", "disabled", existing_type=sa.BOOLEAN(), nullable=False)
    op.alter_column(
        "user", "created_at", existing_type=postgresql.TIMESTAMP(), nullable=False
    )
    op.alter_column(
        "user", "updated_at", existing_type=postgresql.TIMESTAMP(), nullable=False
    )
    op.alter_column("user", "role", existing_type=sa.VARCHAR(), nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column("user", "role", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column(
        "user", "updated_at", existing_type=postgresql.TIMESTAMP(), nullable=True
    )
    op.alter_column(
        "user", "created_at", existing_type=postgresql.TIMESTAMP(), nullable=True
    )
    op.alter_column("user", "disabled", existing_type=sa.BOOLEAN(), nullable=True)
    op.alter_column(
        "questionnaire", "status", existing_type=sa.VARCHAR(), nullable=True
    )
    op.alter_column(
        "questionnaire",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        nullable=True,
    )
    op.add_column(
        "question",
        sa.Column(
            "dependent_response", sa.VARCHAR(), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "question",
        sa.Column(
            "dependent_question_id", sa.INTEGER(), autoincrement=False, nullable=True
        ),
    )
    op.create_table(
        "questiondependency",
        sa.Column(
            "parent_question_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "child_question_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column("answer_required", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("answer_value", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["child_question_id"],
            ["question.id"],
            name="questiondependency_child_question_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["parent_question_id"],
            ["question.id"],
            name="questiondependency_parent_question_id_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "parent_question_id", "child_question_id", name="questiondependency_pkey"
        ),
    )
    # ### end Alembic commands ###
